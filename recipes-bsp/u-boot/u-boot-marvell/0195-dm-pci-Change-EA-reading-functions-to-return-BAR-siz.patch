From 17eb007d5fcdc0582dbd62f0fea573c5eada45e7 Mon Sep 17 00:00:00 2001
From: Sergey Temerkhanov <s.temerkhanov@gmail.com>
Date: Wed, 18 May 2016 23:18:56 -0400
Subject: [PATCH 0195/1200] dm: pci: Change EA reading functions to return BAR
 sizes

Return BAR sizes which are much more useful

Signed-off-by: Sergey Temerkhanov <s.temerkhanov@gmail.com>
---
 drivers/pci/pci-uclass.c | 19 +++++++++----------
 1 file changed, 9 insertions(+), 10 deletions(-)

diff --git a/drivers/pci/pci-uclass.c b/drivers/pci/pci-uclass.c
index 8f2d488718..eaf802ae13 100644
--- a/drivers/pci/pci-uclass.c
+++ b/drivers/pci/pci-uclass.c
@@ -1395,13 +1395,12 @@ void *dm_pci_map_bar(struct udevice *dev, int bar, int flags)
 {
 	int ea_pos;
 	pci_addr_t pci_bus_start;
-	pci_addr_t pci_bus_end;
 	u32 bar_response;
 
 	ea_pos = dm_pci_find_capability(dev, PCI_CAP_ID_EA);
 
 	if (ea_pos) {
-		dm_pci_ea_bar_read(dev, bar, &pci_bus_start, &pci_bus_end);
+		dm_pci_ea_bar_read(dev, bar, &pci_bus_start, size);
 	} else {
 		/* read BAR address */
 		bar = PCI_BASE_ADDRESS_0 + bar * 4;
@@ -1488,7 +1487,7 @@ int dm_pci_find_capability(struct udevice *dev, int cap)
 }
 
 /* Read an Enhanced Allocation (EA) entry */
-static int dm_pci_ea_entry_read(struct udevice *dev, int offset, int *bei, pci_addr_t *start, pci_addr_t *end)
+static int dm_pci_ea_entry_read(struct udevice *dev, int offset, int *bei, pci_addr_t *start, size_t *size)
 {
 	u32 base;
 	u32 max_offset;
@@ -1544,20 +1543,20 @@ static int dm_pci_ea_entry_read(struct udevice *dev, int offset, int *bei, pci_a
 
 	debug("EA (%u,%u) start = %lx\n", PCI_EA_BEI(dw0), prop, (unsigned long)*start);
 
-	*end = (*start) + ((pci_addr_t)max_offset | 0x03);
+	*size = ((size_t)max_offset | 0x03) + 1;
 
 	/* Read MaxOffset MSBs (if 64-bit entry) */
 	if (max_offset & PCI_EA_IS_64) {
 		dm_pci_read_config32(dev, ent_offset, &max_offset);
 		ent_offset += sizeof(u32);
 
-		*end |= (pci_addr_t)max_offset << 32;
+		*size |= (size_t)max_offset << 32;
 	}
 
-	debug("EA (%u,%u) end = %lx\n", PCI_EA_BEI(dw0), prop, (unsigned long)*end);
+	debug("EA (%u,%u) size = %lx\n", PCI_EA_BEI(dw0), prop, (unsigned long)*size);
 
-	if (*end < *start) {
-		*end = 0;
+	if (*start + *size < *start) {
+		*size = 0;
 		*start = 0;
 		printf("EA Entry crosses address boundary\n");
 		goto out;
@@ -1574,7 +1573,7 @@ out:
 }
 
 /* Read an Enhanced Allocation (EA) BAR */
-int dm_pci_ea_bar_read(struct udevice *dev, int bar, pci_addr_t *start, pci_addr_t *end)
+int dm_pci_ea_bar_read(struct udevice *dev, int bar, pci_addr_t *start, size_t *size)
 {
 	int ea;
 	int offset;
@@ -1596,7 +1595,7 @@ int dm_pci_ea_bar_read(struct udevice *dev, int bar, pci_addr_t *start, pci_addr
 		offset += sizeof(u32);
 
 	for (i = 0; (i < num_ent) && (bar != bei); i++) {
-		offset = dm_pci_ea_entry_read(dev, offset, &bei, start, end);
+		offset = dm_pci_ea_entry_read(dev, offset, &bei, start, size);
 	}
 
 	return (bar == bei);
-- 
2.22.0


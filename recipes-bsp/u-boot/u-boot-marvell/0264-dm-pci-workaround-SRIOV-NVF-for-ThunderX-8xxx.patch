From 3bfc59bc1cc3cb9d18e668620a926722a7178f74 Mon Sep 17 00:00:00 2001
From: Radha Mohan Chintakuntla <rchintakuntla@cavium.com>
Date: Wed, 26 Oct 2016 16:10:43 -0400
Subject: [PATCH 0264/1200] dm: pci: workaround SRIOV NVF for ThunderX 8xxx

The PF SRIOV space on ThunderX 8xxx is all readonly. So the VF enabling
logic will not work.

Signed-off-by: Radha Mohan Chintakuntla <rchintakuntla@cavium.com>
---
 drivers/pci/pci-uclass.c | 23 ++++++++++-------------
 1 file changed, 10 insertions(+), 13 deletions(-)

diff --git a/drivers/pci/pci-uclass.c b/drivers/pci/pci-uclass.c
index a5a13b374e..2601ad17e9 100644
--- a/drivers/pci/pci-uclass.c
+++ b/drivers/pci/pci-uclass.c
@@ -754,28 +754,25 @@ int pci_sriov_init(struct udevice *pdev, int vf_en)
 	u16 vf_offset;
 	u16 vf_stride;
 	int vf, ret;
-
 	int pos;
 
 	pos = dm_pci_find_ext_capability(pdev, PCI_EXT_CAP_ID_SRIOV);
-
-	if (!pos)
+	if (!pos) {
+		printf("Error: SRIOV capability not found\n");
 		return -ENODEV;
+	}
 
 	dm_pci_read_config16(pdev, pos + PCI_SRIOV_CTRL, &ctrl);
 
-	if (!(ctrl & PCI_SRIOV_CTRL_VFE) || !(ctrl & PCI_SRIOV_CTRL_MSE)) {
-		dm_pci_read_config16(pdev, pos + PCI_SRIOV_TOTAL_VF, &total_vf);
+	dm_pci_read_config16(pdev, pos + PCI_SRIOV_TOTAL_VF, &total_vf);
 
-		if (vf_en > total_vf)
-			vf_en = total_vf;
+	if (vf_en > total_vf)
+		vf_en = total_vf;
 
-		dm_pci_write_config16(pdev, pos + PCI_SRIOV_NUM_VF,
-				      vf_en);
+	dm_pci_write_config16(pdev, pos + PCI_SRIOV_NUM_VF, vf_en);
 
-		ctrl |= PCI_SRIOV_CTRL_VFE | PCI_SRIOV_CTRL_MSE;
-		dm_pci_write_config16(pdev, pos + PCI_SRIOV_CTRL, ctrl);
-	}
+	ctrl |= PCI_SRIOV_CTRL_VFE | PCI_SRIOV_CTRL_MSE;
+	dm_pci_write_config16(pdev, pos + PCI_SRIOV_CTRL, ctrl);
 
 	dm_pci_read_config16(pdev, pos + PCI_SRIOV_NUM_VF, &num_vfs);
 
@@ -838,7 +835,7 @@ int pci_sriov_init(struct udevice *pdev, int vf_en)
 		bdf += PCI_BDF(0, 0, vf_stride);
 	}
 
-	return num_vfs;
+	return 0;
 
 }
 
-- 
2.22.0


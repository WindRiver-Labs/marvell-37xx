From 6782377518bb6034398705af0dac4e0cb527416b Mon Sep 17 00:00:00 2001
From: Konrad Adamczyk <konrad.adamczyk@cavium.com>
Date: Mon, 3 Jul 2017 11:01:56 +0200
Subject: [PATCH 0378/1200] fdt: Workaround FDT base address passing from ATF
 to U-Boot

Set fdt_blob to be aligned to 16B for secure-boot purposes.
U-Boot should be fixed to take the fdt_blob address from
x1 register that is passed to ATF. Currently U-Boot does not
do this, fdt_blob is then the same as uboot-size stored at uboot
binary header.

Signed-off-by: Konrad Adamczyk <konrad.adamczyk@cavium.com>
---
 lib/fdtdec.c | 24 ++++++++++++++++++++++++
 1 file changed, 24 insertions(+)

diff --git a/lib/fdtdec.c b/lib/fdtdec.c
index 6ececd5f76..826126603d 100644
--- a/lib/fdtdec.c
+++ b/lib/fdtdec.c
@@ -614,6 +614,30 @@ int fdtdec_check_fdt(void)
  */
 int fdtdec_prepare_fdt(void)
 {
+#if defined(ENCRYPT_UBOOT)
+	uint64_t fdt_align;
+	static int aligned = 0;
+	/*
+	 * WORKAROUND: Set fdt_blob to be aligned to 16B for secure-boot
+	 * purposes. U-Boot should be fixed to take the fdt_blob address from
+	 * x1 register that is passed to ATF. Currently U-Boot does not do this,
+	 * fdt_blob is then the same as uboot-size stored at uboot binary header
+	 */
+	if (aligned == 0) {
+		fdt_align = (uint64_t)gd->fdt_blob;
+		if (fdt_align % 16 != 0) {
+			printf("Aligning FDT base address...\n");
+			gd->fdt_blob += (fdt_align % 16);
+			aligned = 1;
+		} else if (fdt_align % 16 == 0 && aligned == 0) {
+			printf("Aligning +16 bytes...\n");
+			gd->fdt_blob += 16;
+			aligned = 1;
+		}
+		aligned = 1;
+	}
+#endif
+
 	if (!gd->fdt_blob || ((uintptr_t)gd->fdt_blob & 3) ||
 	    fdt_check_header(gd->fdt_blob)) {
 #ifdef CONFIG_SPL_BUILD
-- 
2.22.0


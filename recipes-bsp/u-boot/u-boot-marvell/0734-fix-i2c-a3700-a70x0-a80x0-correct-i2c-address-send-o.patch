From cda30a345ded41937811d2ada8cf4673ea1d3402 Mon Sep 17 00:00:00 2001
From: Evan Wang <xswang@marvell.com>
Date: Mon, 17 Apr 2017 18:24:53 +0800
Subject: [PATCH 0734/1200] fix: i2c: a3700: a70x0: a80x0: correct i2c address
 send order

- current in marvell I2C driver, if the offset width
  more than 1 bytes, the lower byte are sent first,
  which is wrong according to I2C protocol.
- The patch fix the issue.

Change-Id: Ib78f1930cffc75a833425f8d1a7923147c6653b3
Signed-off-by: Evan Wang <xswang@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/55506
Reviewed-by: Igal Liberman <igall@marvell.com>
Tested-by: Igal Liberman <igall@marvell.com>
---
 drivers/i2c/mv_i2c.c | 6 ++++--
 drivers/i2c/mvtwsi.c | 6 ++++--
 2 files changed, 8 insertions(+), 4 deletions(-)

diff --git a/drivers/i2c/mv_i2c.c b/drivers/i2c/mv_i2c.c
index 913721b987..bb1e4fce53 100644
--- a/drivers/i2c/mv_i2c.c
+++ b/drivers/i2c/mv_i2c.c
@@ -239,6 +239,7 @@ static int __i2c_read(struct mv_i2c *base, uchar chip, u8 *addr, int alen,
 		      uchar *buffer, int len)
 {
 	struct mv_i2c_msg msg;
+	int i = 0;
 
 	debug("i2c_read(chip=0x%02x, addr=0x%02x, alen=0x%02x, "
 	      "len=0x%02x)\n", chip, *addr, alen, len);
@@ -270,7 +271,7 @@ static int __i2c_read(struct mv_i2c *base, uchar chip, u8 *addr, int alen,
 		msg.condition = I2C_COND_NORMAL;
 		msg.acknack   = I2C_ACKNAK_WAITACK;
 		msg.direction = I2C_WRITE;
-		msg.data      = addr[alen];
+		msg.data      = addr[i++];
 		if (i2c_transfer(base, &msg))
 			return -1;
 	}
@@ -315,6 +316,7 @@ static int __i2c_write(struct mv_i2c *base, uchar chip, u8 *addr, int alen,
 		       uchar *buffer, int len)
 {
 	struct mv_i2c_msg msg;
+	int i = 0;
 
 	debug("i2c_write(chip=0x%02x, addr=0x%02x, alen=0x%02x, "
 	      "len=0x%02x)\n", chip, *addr, alen, len);
@@ -341,7 +343,7 @@ static int __i2c_write(struct mv_i2c *base, uchar chip, u8 *addr, int alen,
 		msg.condition = I2C_COND_NORMAL;
 		msg.acknack   = I2C_ACKNAK_WAITACK;
 		msg.direction = I2C_WRITE;
-		msg.data      = addr[alen];
+		msg.data      = addr[i++];
 		if (i2c_transfer(base, &msg))
 			return -1;
 	}
diff --git a/drivers/i2c/mvtwsi.c b/drivers/i2c/mvtwsi.c
index 38bca89745..f9c012f3ff 100644
--- a/drivers/i2c/mvtwsi.c
+++ b/drivers/i2c/mvtwsi.c
@@ -601,13 +601,14 @@ static int __twsi_i2c_read(struct mvtwsi_registers *twsi, uchar chip,
 	int status = 0;
 	int stop_status;
 	int expected_start = MVTWSI_STATUS_START;
+	int i = 0;
 
 	if (alen > 0) {
 		/* Begin i2c write to send the address bytes */
 		status = i2c_begin(twsi, expected_start, (chip << 1), tick);
 		/* Send address bytes */
 		while ((status == 0) && alen--)
-			status = twsi_send(twsi, addr[alen],
+			status = twsi_send(twsi, addr[i++],
 					   MVTWSI_STATUS_DATA_W_ACK, tick);
 		/* Send repeated STARTs after the initial START */
 		expected_start = MVTWSI_STATUS_REPEATED_START;
@@ -648,13 +649,14 @@ static int __twsi_i2c_write(struct mvtwsi_registers *twsi, uchar chip,
 			    uint tick)
 {
 	int status, stop_status;
+	int i = 0;
 
 	/* Begin i2c write to send first the address bytes, then the
 	 * data bytes */
 	status = i2c_begin(twsi, MVTWSI_STATUS_START, (chip << 1), tick);
 	/* Send address bytes */
 	while ((status == 0) && (alen-- > 0))
-		status = twsi_send(twsi, addr[alen], MVTWSI_STATUS_DATA_W_ACK,
+		status = twsi_send(twsi, addr[i++], MVTWSI_STATUS_DATA_W_ACK,
 				   tick);
 	/* Send data bytes */
 	while ((status == 0) && (length-- > 0))
-- 
2.22.0


From ac15a489ff554d18e31be3c49b19d66bb074a5e3 Mon Sep 17 00:00:00 2001
From: Igal Liberman <igall@marvell.com>
Date: Tue, 3 Jul 2018 14:54:15 +0300
Subject: [PATCH 0772/1200] dts: armada8k: improve pcie address labeling

No function change.

This updates PCIe addressing, aligning it to Linux.
The new naming of the address labels is
	CP110_PCIE_MEM_SIZE
	CP110_PCIEx_CPU_IO_BASE
	CP110_PCIEx_CPU_MEM_BASE
	CP110_PCIEx_BUS_IO_BASE
	CP110_PCIEx_BUS_MEM_BASE
	CP110_PCIE_BUS_MEM_CFG
The new labels are located in a new file 'armada-8k.dtsi'
which holds common definitions for Armada8K family.

In addition:
	- Move CP110 address definition to the new file:
		- CP110_BASE_OFFSET
		- CP110_SPACE_SIZE
		- CP110_BASE
	  to the new file.
	- Introduce 2 macros for 64bit addresses handling:
		- U64_TO_U32_H
		- U64_TO_U32_L

Change-Id: Iebbfb6396964616208a88a5bca34ea59f6aff44f
Signed-off-by: Igal Liberman <igall@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/57614
Reviewed-by: Kostya Porotchkin <kostap@marvell.com>
---
 arch/arm/dts/armada-70x0.dtsi  | 13 +++---
 arch/arm/dts/armada-8040.dtsi  | 24 +++++------
 arch/arm/dts/armada-8k.dtsi    | 25 ++++++++++++
 arch/arm/dts/armada-cp110.dtsi | 74 ++++++++++++++++++----------------
 4 files changed, 79 insertions(+), 57 deletions(-)
 create mode 100644 arch/arm/dts/armada-8k.dtsi

diff --git a/arch/arm/dts/armada-70x0.dtsi b/arch/arm/dts/armada-70x0.dtsi
index c40eb368e7..a79ddf9335 100644
--- a/arch/arm/dts/armada-70x0.dtsi
+++ b/arch/arm/dts/armada-70x0.dtsi
@@ -10,20 +10,17 @@
 
 #include <dt-bindings/gpio/gpio.h>
 #include "armada-common.dtsi"
+#include "armada-8k.dtsi"
 #include "armada-ap806-quad.dtsi"
 
-#define CP110_NAME		cp0
-#define CP110_BASE              0xf2000000
-#define CP110_PCIE_MEM_BASE     0xf6000000
-#define CP110_PCIE_MEM_OFFSET	0x1000000
-#define CP110_PCIE_IO_BASE      0xf9000000
+/* CP110-0 Settings */
+#define CP110_NAME				cp0
+#define CP110_NUM				0
 
 #include "armada-cp110.dtsi"
 
 #undef CP110_NAME
-#undef CP110_BASE
-#undef CP110_PCIE_IO_BASE
-#undef CP110_PCIE_MEM_BASE
+#undef CP110_NUM
 
 / {
 	model = "Marvell Armada 7040";
diff --git a/arch/arm/dts/armada-8040.dtsi b/arch/arm/dts/armada-8040.dtsi
index 3206cfa5c5..8a535b81a7 100644
--- a/arch/arm/dts/armada-8040.dtsi
+++ b/arch/arm/dts/armada-8040.dtsi
@@ -47,32 +47,26 @@
 
 #include <dt-bindings/gpio/gpio.h>
 #include "armada-common.dtsi"
+#include "armada-8k.dtsi"
 #include "armada-ap806-quad.dtsi"
 
-#define CP110_NAME		cp0
-#define CP110_BASE              0xf2000000
-#define CP110_PCIE_MEM_BASE     0xf6000000
-#define CP110_PCIE_MEM_OFFSET	0x1000000
-#define CP110_PCIE_IO_BASE      0xf9000000
+/* CP110-0 Settings */
+#define CP110_NAME				cp0
+#define CP110_NUM				0
 
 #include "armada-cp110.dtsi"
 
 #undef CP110_NAME
-#undef CP110_BASE
-#undef CP110_PCIE_IO_BASE
-#undef CP110_PCIE_MEM_BASE
+#undef CP110_NUM
 
-#define CP110_NAME		cp1
-#define CP110_BASE              0xf4000000
-#define CP110_PCIE_MEM_BASE     0xfa000000
-#define CP110_PCIE_IO_BASE      0xfd000000
+/* CP110-1 Settings */
+#define CP110_NAME				cp1
+#define CP110_NUM				1
 
 #include "armada-cp110.dtsi"
 
 #undef CP110_NAME
-#undef CP110_BASE
-#undef CP110_PCIE_IO_BASE
-#undef CP110_PCIE_MEM_BASE
+#undef CP110_NUM
 
 / {
 	model = "Marvell Armada 8040";
diff --git a/arch/arm/dts/armada-8k.dtsi b/arch/arm/dts/armada-8k.dtsi
new file mode 100644
index 0000000000..99cef71684
--- /dev/null
+++ b/arch/arm/dts/armada-8k.dtsi
@@ -0,0 +1,25 @@
+/*
+ * Copyright (C) 2018 Marvell International Ltd.
+ *
+ * SPDX-License-Identifier:    GPL-2.0
+ * https://spdx.org/licenses
+ */
+/* Common definitions used by Armada 8K DTs */
+
+/* This defines used to calculate the base address of each CP */
+#define CP110_BASE_OFFSET			(0xf2000000)
+#define CP110_SPACE_SIZE			(0x02000000)
+#define CP110_BASE				\
+		(CP110_BASE_OFFSET + (CP110_NUM * CP110_SPACE_SIZE))
+
+#define CP110_PCIE_MEM_SIZE			(0xf00000)
+#define CP110_PCIEx_CPU_IO_BASE(iface)		\
+		(0xf9000000 + CP110_NUM * 0x4010000 + (iface) *  0x10000)
+#define CP110_PCIEx_CPU_MEM_BASE(iface)		\
+		(0xf6000000 + CP110_NUM * 0x4000000 + (iface) *  0x1000000)
+#define CP110_PCIEx_BUS_IO_BASE(iface)		\
+		(CP110_PCIEx_CPU_IO_BASE(iface))
+#define CP110_PCIEx_BUS_MEM_BASE(iface)		\
+		(CP110_PCIEx_CPU_MEM_BASE(iface))
+#define CP110_PCIE_BUS_MEM_CFG			(0x82000000)
+
diff --git a/arch/arm/dts/armada-cp110.dtsi b/arch/arm/dts/armada-cp110.dtsi
index ed3c4cdd8b..26094b3825 100644
--- a/arch/arm/dts/armada-cp110.dtsi
+++ b/arch/arm/dts/armada-cp110.dtsi
@@ -8,26 +8,13 @@
  */
 #include <dt-bindings/comphy/comphy_data.h>
 
-#define CP110_BASE_HIGH			((CP110_BASE >> 32) & 0xffffffff)
-#define CP110_BASE_LOW			(CP110_BASE & 0xffffffff)
-
-#define CP110_PCIEx_IO_BASE_H(iface)	((CP110_PCIE_IO_BASE >> 32) & 0xffffffff)
-#define CP110_PCIEx_IO_BASE_L(iface)	((CP110_PCIE_IO_BASE & 0xffffffff) + (iface *  0x10000))
-
-#define CP110_PCIEx_MEM_BASE_H(iface)	((CP110_PCIE_MEM_BASE >> 32) & 0xffffffff)
-#define CP110_PCIEx_MEM_BASE_L(iface)	((CP110_PCIE_MEM_BASE & 0xffffffff) + (iface *  0x1000000))
-
-#define CP110_PCIEx_REG0_BASE_H(iface)	(CP110_BASE_HIGH)
-#define CP110_PCIEx_REG0_BASE_L(iface)	(CP110_BASE_LOW + 0x600000 + (iface * 0x20000))
-
-#define CP110_PCIEx_REG1_BASE_H(iface)	(CP110_PCIEx_MEM_BASE_H(iface))
-#define CP110_PCIEx_REG1_BASE_L(iface)	(CP110_PCIEx_MEM_BASE_L(iface) + 0xf00000)
-
-#define CP110_PCIEx_IO_BASE(iface)	(CP110_PCIE_IO_BASE + (iface *  0x10000))
-#define CP110_PCIEx_MEM_BASE(iface)	(CP110_PCIE_MEM_BASE + (iface *  0x1000000))
-#define CP110_PCIEx_REG0_BASE(iface)	(CP110_BASE + 0x600000 + (iface) * 0x20000)
-#define CP110_PCIEx_REG1_BASE(iface)	(CP110_PCIEx_MEM_BASE(iface) + 0xf00000)
+#define U64_TO_U32_H(addr)		(((addr) >> 32) & 0xffffffff)
+#define U64_TO_U32_L(addr)		((addr) & 0xffffffff)
 
+#define CP110_PCIEx_REG0_BASE(iface)	\
+	(CP110_BASE + 0x600000 + (iface) * 0x20000)
+#define CP110_PCIEx_REG1_BASE(iface)	\
+	(CP110_PCIEx_CPU_MEM_BASE(iface) + CP110_PCIE_MEM_SIZE)
 / {
 	CP110_NAME {
 		#address-cells = <2>;
@@ -39,7 +26,7 @@
 			#address-cells = <1>;
 			#size-cells = <1>;
 			compatible = "simple-bus";
-			ranges = <0x0 CP110_BASE_HIGH CP110_BASE_LOW 0x2000000>;
+			ranges = <0x0 U64_TO_U32_H(CP110_BASE) U64_TO_U32_L(CP110_BASE) 0x2000000>;
 
 			CP110_LABEL(mdio): mdio@12a200 {
 				#address-cells = <1>;
@@ -253,8 +240,10 @@
 
 		CP110_LABEL(pcie0): pcie0@600000 {
 			compatible = "marvell,armada8k-pcie", "snps,dw-pcie";
-			reg = <CP110_PCIEx_REG0_BASE_H(0) CP110_PCIEx_REG0_BASE_L(0) 0 0x10000>,
-			      <CP110_PCIEx_REG1_BASE_H(0) CP110_PCIEx_REG1_BASE_L(0) 0 0x80000>;
+			reg =
+			   <U64_TO_U32_H(CP110_PCIEx_REG0_BASE(0)) U64_TO_U32_L(CP110_PCIEx_REG0_BASE(0)) 0 0x10000>,
+			   /* Last 512KB of mem space */
+			   <U64_TO_U32_H(CP110_PCIEx_REG1_BASE(0)) U64_TO_U32_L(CP110_PCIEx_REG1_BASE(0)) 0 0x80000>;
 			reg-names = "ctrl", "config";
 			#address-cells = <3>;
 			#size-cells = <2>;
@@ -264,17 +253,24 @@
 			bus-range = <0 0xff>;
 			ranges =
 				/* downstream I/O */
-				<0x81000000 0 CP110_PCIEx_IO_BASE_L(0) CP110_PCIEx_IO_BASE_H(0) CP110_PCIEx_IO_BASE_L(0) 0 0x10000
+				<0x81000000 U64_TO_U32_H(CP110_PCIEx_BUS_IO_BASE(0))
+				U64_TO_U32_L(CP110_PCIEx_BUS_IO_BASE(0)) U64_TO_U32_H(CP110_PCIEx_CPU_IO_BASE(0))
+				U64_TO_U32_L(CP110_PCIEx_CPU_IO_BASE(0)) 0 0x10000
 				/* non-prefetchable memory */
-				 0x82000000 0 CP110_PCIEx_MEM_BASE_L(0) CP110_PCIEx_MEM_BASE_H(0) CP110_PCIEx_MEM_BASE_L(0) 0 0xf00000>;
+				CP110_PCIE_BUS_MEM_CFG U64_TO_U32_H(CP110_PCIEx_BUS_MEM_BASE(0))
+				U64_TO_U32_L(CP110_PCIEx_BUS_MEM_BASE(0)) U64_TO_U32_H(CP110_PCIEx_CPU_MEM_BASE(0))
+				U64_TO_U32_L(CP110_PCIEx_CPU_MEM_BASE(0)) U64_TO_U32_H(CP110_PCIE_MEM_SIZE)
+				U64_TO_U32_L(CP110_PCIE_MEM_SIZE)>;
 			num-lanes = <1>;
 			status = "disabled";
 		};
 
 		CP110_LABEL(pcie1): pcie1@620000 {
 			compatible = "marvell,armada8k-pcie", "snps,dw-pcie";
-			reg = <CP110_PCIEx_REG0_BASE_H(1) CP110_PCIEx_REG0_BASE_L(1) 0 0x10000>,
-			      <CP110_PCIEx_REG1_BASE_H(1) CP110_PCIEx_REG1_BASE_L(1) 0 0x80000>;	/* Last 512KB of mem space */
+			reg =
+			   <U64_TO_U32_H(CP110_PCIEx_REG0_BASE(1)) U64_TO_U32_L(CP110_PCIEx_REG0_BASE(1)) 0 0x10000>,
+			   /* Last 512KB of mem space */
+			   <U64_TO_U32_H(CP110_PCIEx_REG1_BASE(1)) U64_TO_U32_L(CP110_PCIEx_REG1_BASE(1)) 0 0x80000>;
 			reg-names = "ctrl", "config";
 			#address-cells = <3>;
 			#size-cells = <2>;
@@ -284,18 +280,24 @@
 			bus-range = <0 0xff>;
 			ranges =
 				/* downstream I/O */
-				<0x81000000 0 CP110_PCIEx_IO_BASE_L(1) CP110_PCIEx_IO_BASE_H(1) CP110_PCIEx_IO_BASE_L(1) 0 0x10000
+				<0x81000000 U64_TO_U32_H(CP110_PCIEx_BUS_IO_BASE(1))
+				U64_TO_U32_L(CP110_PCIEx_BUS_IO_BASE(1)) U64_TO_U32_H(CP110_PCIEx_CPU_IO_BASE(1))
+				U64_TO_U32_L(CP110_PCIEx_CPU_IO_BASE(1)) 0 0x10000
 				/* non-prefetchable memory */
-				 0x82000000 0 CP110_PCIEx_MEM_BASE_L(1) CP110_PCIEx_MEM_BASE_H(1) CP110_PCIEx_MEM_BASE_L(1) 0 0xf00000>;
-
+				CP110_PCIE_BUS_MEM_CFG U64_TO_U32_H(CP110_PCIEx_BUS_MEM_BASE(1))
+				U64_TO_U32_L(CP110_PCIEx_BUS_MEM_BASE(1)) U64_TO_U32_H(CP110_PCIEx_CPU_MEM_BASE(1))
+				U64_TO_U32_L(CP110_PCIEx_CPU_MEM_BASE(1)) U64_TO_U32_H(CP110_PCIE_MEM_SIZE)
+				U64_TO_U32_L(CP110_PCIE_MEM_SIZE)>;
 			num-lanes = <1>;
 			status = "disabled";
 		};
 
 		CP110_LABEL(pcie2): pcie2@640000 {
 			compatible = "marvell,armada8k-pcie", "snps,dw-pcie";
-			reg = <CP110_PCIEx_REG0_BASE_H(2) CP110_PCIEx_REG0_BASE_L(2) 0 0x10000>,
-			      <CP110_PCIEx_REG1_BASE_H(2) CP110_PCIEx_REG1_BASE_L(2) 0 0x80000>;	/* Last 64KB of mem space */
+			reg =
+			   <U64_TO_U32_H(CP110_PCIEx_REG0_BASE(2)) U64_TO_U32_L(CP110_PCIEx_REG0_BASE(2)) 0 0x10000>,
+			   /* Last 64KB of mem space */
+			   <U64_TO_U32_H(CP110_PCIEx_REG1_BASE(2)) U64_TO_U32_L(CP110_PCIEx_REG1_BASE(2)) 0 0x80000>;
 			reg-names = "ctrl", "config";
 			#address-cells = <3>;
 			#size-cells = <2>;
@@ -305,10 +307,14 @@
 			bus-range = <0 0xff>;
 			ranges =
 				/* downstream I/O */
-				<0x81000000 0 CP110_PCIEx_IO_BASE_L(2) CP110_PCIEx_IO_BASE_H(2) CP110_PCIEx_IO_BASE_L(2) 0 0x10000
+				<0x81000000 U64_TO_U32_H(CP110_PCIEx_BUS_IO_BASE(2))
+				U64_TO_U32_L(CP110_PCIEx_BUS_IO_BASE(2)) U64_TO_U32_H(CP110_PCIEx_CPU_IO_BASE(2))
+				U64_TO_U32_L(CP110_PCIEx_CPU_IO_BASE(2)) 0 0x10000
 				/* non-prefetchable memory */
-				 0x82000000 0 CP110_PCIEx_MEM_BASE_L(2) CP110_PCIEx_MEM_BASE_H(2) CP110_PCIEx_MEM_BASE_L(2) 0 0xf00000>;
-
+				CP110_PCIE_BUS_MEM_CFG U64_TO_U32_H(CP110_PCIEx_BUS_MEM_BASE(2))
+				U64_TO_U32_L(CP110_PCIEx_BUS_MEM_BASE(2)) U64_TO_U32_H(CP110_PCIEx_CPU_MEM_BASE(2))
+				U64_TO_U32_L(CP110_PCIEx_CPU_MEM_BASE(2)) U64_TO_U32_H(CP110_PCIE_MEM_SIZE)
+				U64_TO_U32_L(CP110_PCIE_MEM_SIZE)>;
 			num-lanes = <1>;
 			status = "disabled";
 		};
-- 
2.22.0


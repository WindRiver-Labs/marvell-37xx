From 3295cac8441cf673b81c2cdc635756561075247f Mon Sep 17 00:00:00 2001
From: Ben Peled <bpeled@marvell.com>
Date: Tue, 18 Dec 2018 17:56:34 +0200
Subject: [PATCH 0934/1200] cmd: add commad mv_fw_info to get service CPU
 firmware information.

Firmware information written by both cp and ap to ap to mss sram cp0
region and read when cmd is called.

Change-Id: Ica2a17c2b6026b18ca5e7421f5c9875aed7a95df
Signed-off-by: Ben Peled <bpeled@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/61690
Reviewed-by: Kostya Porotchkin <kostap@marvell.com>
Tested-by: Kostya Porotchkin <kostap@marvell.com>
Reviewed-on: https://sj1git1.cavium.com/1220
Tested-by: Kostya Porotchkin <Kostya.Porotchkin@cavium.com>
Reviewed-by: Kostya Porotchkin <Kostya.Porotchkin@cavium.com>
---
 cmd/mvebu/Kconfig      |  8 +++++
 cmd/mvebu/Makefile     |  1 +
 cmd/mvebu/mv_fw_info.c | 78 ++++++++++++++++++++++++++++++++++++++++++
 3 files changed, 87 insertions(+)
 create mode 100644 cmd/mvebu/mv_fw_info.c

diff --git a/cmd/mvebu/Kconfig b/cmd/mvebu/Kconfig
index b3128630fc..99ef711e83 100644
--- a/cmd/mvebu/Kconfig
+++ b/cmd/mvebu/Kconfig
@@ -9,6 +9,14 @@ config CMD_MVEBU_BUBT
 	  For details about bubt command please see the documentation
 	  in doc/mvebu/cmd/bubt.txt
 
+config CMD_MVEBU_MV_FW_INFO
+	bool "mv_fw_info"
+	depends on TARGET_MVEBU_ARMADA_8K
+	default y
+	help
+	  mv_fw_info command prints FreeRTOS version and firmware information
+	  for the FW running on CM3 CPUs of AP and connected CPs.
+
 config CMD_MVEBU_PHY_FW_DOWNLOAD
 	bool "phy_fw_down"
 	depends on MVMDIO
diff --git a/cmd/mvebu/Makefile b/cmd/mvebu/Makefile
index 4dc58975db..1988bffc2d 100644
--- a/cmd/mvebu/Makefile
+++ b/cmd/mvebu/Makefile
@@ -14,3 +14,4 @@ obj-$(CONFIG_CMD_MVEBU_TSEN) += thermal.o
 obj-$(CONFIG_CMD_MVEBU_HW_INFO) += hw_info.o
 obj-$(CONFIG_CMD_MVEBU_NAND_OEM) += pxa3xx_nand_oem.o
 obj-$(CONFIG_CMD_MVEBU_SAR) += sar.o
+obj-$(CONFIG_CMD_MVEBU_MV_FW_INFO) += mv_fw_info.o
diff --git a/cmd/mvebu/mv_fw_info.c b/cmd/mvebu/mv_fw_info.c
new file mode 100644
index 0000000000..b4d211f64d
--- /dev/null
+++ b/cmd/mvebu/mv_fw_info.c
@@ -0,0 +1,78 @@
+/*
+ * Copyright (C) 2018 Marvell International Ltd.
+ *
+ * SPDX-License-Identifier:	GPL-2.0
+ * https://spdx.org/licenses
+ */
+
+#include <asm/io.h>
+#include <command.h>
+#include <common.h>
+#include <config.h>
+#include <mach/soc.h>
+
+#define MSS_CP_CM3_SRAM_BASE		0x220000
+#define RTOS_VERS_OFSSET		0x1000
+#define	FW_INFO_OFFS			(MVEBU_REGS_BASE_CP(0, 0) + \
+	MSS_CP_CM3_SRAM_BASE + RTOS_VERS_OFSSET)
+#define	UNIT_FW_INFO(n_cp)		(FW_INFO_OFFS + (n_cp) * 0x40)
+
+typedef struct{
+	u8 unit_name[4];
+	u32 mss_pm;
+	u32 mci_link_mgmt;
+	u32 fca;
+	u8 rtos_version[32];
+	u8 rtos_kernel_version[12];
+} FW_INFO;
+
+void mv_print_fw_info(const FW_INFO * const info)
+{
+	u32 first_flag = true;
+
+	printf("Unit: %s\n FreeROTS release: %s\n Kernel: %s\n Flags:",
+	       info->unit_name, info->rtos_version, info->rtos_kernel_version);
+
+	if (info->mci_link_mgmt) {
+		printf(" MCI link management");
+		first_flag = false;
+	}
+
+	if (info->fca) {
+		if (!first_flag)
+			printf(",");
+		printf(" PPv2 Flow Control");
+		first_flag = false;
+	}
+
+	if (info->mss_pm) {
+		if (!first_flag)
+			printf(",");
+		printf(" MSS Power Management");
+	}
+	printf("\n------------------------------------\n");
+}
+
+int mv_do_fw_info_cmd(cmd_tbl_t *cmdtp, int flag, int argc, char *const argv[])
+{
+	FW_INFO info;
+	u32 num_of_cps;
+	u32 num_of_aps;
+	u32 num_of_units;
+	u32 i;
+
+	soc_get_ap_cp_num(&num_of_aps, &num_of_cps);
+	num_of_units = num_of_aps + num_of_cps;
+
+	for (i = 0; i < num_of_units; ++i) {
+		memcpy(&info, (void *)UNIT_FW_INFO(i), sizeof(FW_INFO));
+		mv_print_fw_info(&info);
+	}
+
+	return 0;
+}
+
+U_BOOT_CMD(
+	mv_fw_info, 1, 0, mv_do_fw_info_cmd,
+	"Prints service CPU firmware information",
+	"");
-- 
2.22.0

